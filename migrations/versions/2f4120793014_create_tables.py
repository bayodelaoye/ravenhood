"""create tables

Revision ID: 2f4120793014
Revises: 
Create Date: 2024-08-18 07:48:38.960716

"""

import os

import sqlalchemy as sa
from alembic import op

environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")

# revision identifiers, used by Alembic.
revision = "2f4120793014"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "stocks",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("company_name", sa.String(length=255), nullable=True),
        sa.Column("ticker_symbol", sa.String(length=5), nullable=True),
        sa.Column("current_price", sa.Numeric(precision=7, scale=2), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("ceo", sa.String(length=255), nullable=True),
        sa.Column("employees", sa.Integer(), nullable=True),
        sa.Column("headquarters", sa.String(length=255), nullable=True),
        sa.Column("founded", sa.String(length=4), nullable=True),
        sa.Column("market_cap_billions", sa.BigInteger(), nullable=True),
        sa.Column(
            "price_earnings_ratio", sa.Numeric(precision=7, scale=2), nullable=True
        ),
        sa.Column("dividend_yield", sa.Numeric(precision=4, scale=2), nullable=True),
        sa.Column("average_volume", sa.Integer(), nullable=True),
        sa.Column("high_today", sa.Numeric(precision=7, scale=2), nullable=True),
        sa.Column("low_today", sa.Numeric(precision=7, scale=2), nullable=True),
        sa.Column("open_price", sa.Numeric(precision=7, scale=2), nullable=True),
        sa.Column("volume", sa.Integer(), nullable=True),
        sa.Column(
            "fifty_two_week_high", sa.Numeric(precision=7, scale=2), nullable=True
        ),
        sa.Column(
            "fifty_two_week_low", sa.Numeric(precision=7, scale=2), nullable=True
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )

    if environment == "production":
        op.execute(f"ALTER TABLE stocks SET SCHEMA {SCHEMA};")

    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("first_name", sa.String(length=20), nullable=False),
        sa.Column("last_name", sa.String(length=20), nullable=False),
        sa.Column("email", sa.String(length=50), nullable=False),
        sa.Column("username", sa.String(length=15), nullable=False),
        sa.Column("hashed_password", sa.String(length=255), nullable=False),
        sa.Column("address", sa.String(length=50), nullable=False),
        sa.Column("city", sa.String(length=30), nullable=False),
        sa.Column("state", sa.String(length=2), nullable=False),
        sa.Column("zip", sa.Numeric(precision=5, scale=0), nullable=False),
        sa.Column("phone", sa.Numeric(precision=10, scale=0), nullable=False),
        sa.Column("ssn", sa.Numeric(precision=9, scale=0), nullable=False),
        sa.Column("birthday", sa.Date(), nullable=False),
        sa.Column("citizenship", sa.String(length=20), nullable=False),
        sa.Column("image", sa.String(length=500), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("ssn"),
        sa.UniqueConstraint("username"),
    )

    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")

    op.create_table(
        "portfolios",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("portfolio_name", sa.String(length=20), nullable=False),
        sa.Column("cash_balance", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("total_amount", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    if environment == "production":
        op.execute(f"ALTER TABLE portfolios SET SCHEMA {SCHEMA};")

    op.create_table(
        "watch_lists",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=30), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    if environment == "production":
        op.execute(f"ALTER TABLE watch_lists SET SCHEMA {SCHEMA};")

    op.create_table(
        "portfolio_stocks",
        sa.Column("portfolio_id", sa.Integer(), nullable=False),
        sa.Column("stock_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["portfolio_id"],
            ["portfolios.id"],
        ),
        sa.ForeignKeyConstraint(
            ["stock_id"],
            ["stocks.id"],
        ),
        sa.PrimaryKeyConstraint("portfolio_id", "stock_id"),
    )

    if environment == "production":
        op.execute(f"ALTER TABLE portfolio_stocks SET SCHEMA {SCHEMA};")

    op.create_table(
        "transactions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("portfolio_id", sa.Integer(), nullable=True),
        sa.Column("type", sa.String(length=4), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("stock", sa.String(length=5), nullable=False),
        sa.Column("quantity", sa.Integer(), nullable=False),
        sa.Column(
            "transaction_price", sa.Numeric(precision=5, scale=2), nullable=False
        ),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["portfolio_id"],
            ["portfolios.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    if environment == "production":
        op.execute(f"ALTER TABLE transactions SET SCHEMA {SCHEMA};")

    op.create_table(
        "watch_list_stocks",
        sa.Column("stock_id", sa.Integer(), nullable=False),
        sa.Column("watchlist_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["stock_id"],
            ["stocks.id"],
        ),
        sa.ForeignKeyConstraint(
            ["watchlist_id"],
            ["watch_lists.id"],
        ),
        sa.PrimaryKeyConstraint("stock_id", "watchlist_id"),
    )

    if environment == "production":
        op.execute(f"ALTER TABLE watch_list_stocks SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("watch_list_stocks")
    op.drop_table("transactions")
    op.drop_table("portfolio_stocks")
    op.drop_table("watch_lists")
    op.drop_table("portfolios")
    op.drop_table("users")
    op.drop_table("stocks")
    # ### end Alembic commands ###
